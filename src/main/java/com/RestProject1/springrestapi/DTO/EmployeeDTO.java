package com.RestProject1.springrestapi.dto;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.validation.constraints.Email;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Length;

import com.RestProject1.springrestapi.model.Benifits;
import com.RestProject1.springrestapi.model.Department;
import com.RestProject1.springrestapi.model.Employee;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@ApiModel(description = "All attributes of Employee")
public class EmployeeDTO {
	
	@ApiModelProperty(notes = "AutoGenerated ID")
	private Long id;
	
	@NotNull(message = "Name cannot be Null")
	@NotBlank
	@Length(min=2, message="Name must contain atleast 2 alphabets")
	@ApiModelProperty(notes = "Name should be of atleast two alphabets", required = true)
	private String name;
	
	@NotNull(message = "Age cannot be null")
	@Min(value = 18, message = "Age must be between 18 - 65")
    @Max(value = 65, message = "Age must be between 18 - 65")
	@ApiModelProperty(notes = "Age should be between 18-65", required = true)
	private Long age;

	@NotNull
	@NotBlank
	@Email(message = "Enter Valid Email")
	private String email;
	
	@NotNull
	@Max(value = 3, message = "department id should be between 1 - 3")
	@Min(value = 1,  message = "department id should be between 1 - 3")
	@ApiModelProperty(notes = "department id should be between 1 - 3", required = true)	
	private  Long department; 
	
	@NotNull
	@Max(value = 3, message = "Benfifits id should be between 1 - 3")
	@Min(value = 1, message = "Benfifits id should be between 1 - 3")
	@ApiModelProperty(notes = "Benfifits id should be between 1 - 3", required = true)
	private Long benifits;
	
	@ApiModelProperty(notes = "Manager could be null", required = true)
	private Long manager;
	
	
	@NotBlank
	@NotNull
	@ApiModelProperty(notes = "Location should be within Pakistan", required = true)
	private String location;
	
	
	//private Boolean deleted = Boolean.FALSE;


	/*public Boolean getDeleted() {
		return deleted;
	}


	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}*/


	public String getLocation() {
		return location;
	}


	public void setLocation(String location) {
		this.location = location;
	}


	public Long getId() {
		return id;
	}


	public void setId(Long id) {
		this.id = id;
	}


	public String getName() {
		return name;
	}


	public void setName(String name) {
		this.name = name;
	}


	public Long getAge() {
		return age;
	}


	public void setAge(Long age) {
		this.age = age;
	}


	public String getEmail() {
		return email;
	}


	public void setEmail(String email) {
		this.email = email;
	}


	public Long getDepartment() {
		return department;
	}


	public void setDepartment(Long department) {
		this.department = department;
	}


	public Long getBenifits() {
		return benifits;
	}


	public void setBenifits(Long benifits) {
		this.benifits = benifits;
	}


	public Long getManager() {
		return manager;
	}


	public void setManager(Long manager) {
		this.manager = manager;
	}





	


	public EmployeeDTO(Long id, String name, Long age, String email, Long department, Long benifits, Long manager,
			String location) {
		super();
		this.id = id;
		this.name = name;
		this.age = age;
		this.email = email;
		this.department = department;
		this.benifits = benifits;
		this.manager = manager;
		this.location = location;
		//this.deleted = deleted;
	}


	@Override
	public String toString() {
		return "EmployeeDTO [id=" + id + ", name=" + name + ", age=" + age + ", email=" + email + ", department="
				+ department + ", benifits=" + benifits + ", manager=" + manager + ", location=" + location
				 + "]";
	}


	public EmployeeDTO() {
		super();
		// TODO Auto-generated constructor stub
	}
	


	
}